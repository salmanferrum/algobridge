#pragma version 5
txn ApplicationID
int 0
==
bnz main_l14
txn OnCompletion
int NoOp
==
bnz main_l7
txn OnCompletion
int UpdateApplication
==
bnz main_l6
txn OnCompletion
int DeleteApplication
==
bnz main_l5
err
main_l5:
int 0
return
main_l6:
int 0
return
main_l7:
txna ApplicationArgs 0
byte "setup"
==
bnz main_l13
txna ApplicationArgs 0
byte "swap"
==
bnz main_l12
txna ApplicationArgs 0
byte "withdraw"
==
bnz main_l11
err
main_l11:
txna ApplicationArgs 1
btoi
txn Sender
txna ApplicationArgs 2
btoi
callsub sub3
int 1
return
main_l12:
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
txna ApplicationArgs 4
btoi
txna ApplicationArgs 5
callsub sub2
int 1
return
main_l13:
byte "token"
app_global_get
int 0
global CurrentApplicationAddress
callsub sub0
int 1
return
main_l14:
global GroupSize
int 1
==
assert
byte "bridge_fee"
txna ApplicationArgs 0
btoi
app_global_put
byte "token"
txna ApplicationArgs 1
btoi
app_global_put
byte "application_admin"
txn Sender
app_global_put
int 1
return
sub0: // execute_asset_transfer
store 2
store 1
store 0
itxn_begin
int axfer
itxn_field TypeEnum
load 0
itxn_field XferAsset
load 1
itxn_field AssetAmount
load 2
itxn_field AssetReceiver
int 0
itxn_field Fee
itxn_submit
retsub
sub1: // is_asset_transfered
store 9
store 8
global GroupSize
int 2
==
gtxn 0 TypeEnum
int axfer
==
&&
gtxn 0 XferAsset
load 8
==
&&
gtxn 0 Sender
txn Sender
==
&&
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
&&
gtxn 0 AssetAmount
load 9
==
&&
assert
retsub
sub2: // swap_token
store 7
store 6
store 5
store 4
store 3
load 4
int 0
>
assert
load 6
int 0
>
assert
byte "amount"
load 4
app_global_put
byte "target_token"
load 5
app_global_put
byte "target_network"
load 6
app_global_put
byte "target_address"
load 7
app_global_put
load 3
load 4
callsub sub1
retsub
sub3: // withdraw_token
store 12
store 11
store 10
load 12
int 0
>
assert
load 12
store 14
load 12
byte "bridge_fee"
app_global_get
int 10000
/
*
store 13
byte "bridge_fee"
load 13
app_global_put
load 14
load 13
-
store 14
load 10
load 14
load 11
callsub sub0
retsub
